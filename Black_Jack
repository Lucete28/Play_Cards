import random

#변수 생성
global P1
global P2
global P1_sum
global P2_sum
P1=[]
P2=[]
P1_sum=0
P2_sum=0
turn=0
add_time=3

act = 1
#함수
def cal():
  if P1_sum>21:
    print("lose")
  elif P1_sum>P2_sum:
    print("P1 win")
  elif P1_sum<P2_sum:
    print("com win")
  else:
    print("draw")
	

    #creat deck
shape=["s", "d", "h", "c"]
deck = [ (s, n) for s in shape for n in range(1,14)]
random.shuffle(deck)

#reset hand
def reset_hand():
  global P1
  global P2
  global P1_sum
  global P2_sum
  global deck
  P1=[]
  P2=[]
  P1_sum=0
  P2_sum=0
  
  for i in range(2):
    P1 += deck[i]
    del deck[i]
  for i in range(2):
    P2 += deck[i]
    del deck[i]

#카드보기
def cal_hand():
  global P1
  global P2
  global P1_sum
  global P2_sum
  for i in [1,3]:
    if P1[i]>=10:
      P1_sum+=10
    else:
      P1_sum+=P1[i]
  for i in [1,3]:
    if P2[i]>=10:
      P2_sum+=10
    else:
      P2_sum+=P2[i]

#starting game




def start():
  global P1
  global P2
  global P1_sum
  global P2_sum
  global act
  act=int(input("Start game?(No:0, Yes:1): "))
  if act==0:
    print("end game")
  elif act==1:
    print("Start")
    #카드 나누기
    reset_hand()

    #카드보기
    cal_hand()

start()
print(P1)
print(P1_sum)
#game
def add_or_not():
  global P1
  global P1_sum
  global deck
  global add_time
  act=int(input("Choose your action(End turn:0, Add card:1): "))
  if act==0:	#0이면 종료
    return
  if act==1:	#1이면 P1에 카드추가
    print("카드를 한장 더 뽑습니다.")
    P1 += deck[0]
    del deck[0]
    if P1[add_time + 2]>=10:
      P1_sum+=10
      if P1_sum>21:
        cal()
    else:
      P1_sum+=P1[add_time + 2]
      if P1_sum>21:
        cal()
    add_time+=2
    
  print(P1)
  print(P1_sum)
  add_or_not()
add_or_not()




#나중에 추가할 기능
'''
coin
A(1 or 11)

'''
